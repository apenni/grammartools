package grammartools.ui.options;

import grammartools.GrammarTools.StatsOptions;
import java.util.Arrays;

@SuppressWarnings("serial")
public class StatsConfigPanel extends javax.swing.JPanel implements ConfigPanel
{
    public StatsConfigPanel()
    {
        initComponents();
    }
    
    @Override
    public StatsOptions getConfig()
    {
        StatsOptions o = new StatsOptions();
        o.constituents = parseConstituentsList(constituentsTextField.getText());
        if(o.constituents == null)
            o.constituents = new String[0];
        return o;
    }

    @Override
    public String getConfigErrors()
    {
        String errors = "";

        StatsOptions o = getConfig();
        
        return errors.isEmpty() ? null : errors;        
    }
    
    private static String[] parseConstituentsList(String text)
    {
        return text.split("[\\s,]+");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        constituentsTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        constituentsList = new javax.swing.JList();
        addConstituentButton = new javax.swing.JButton();

        jLabel1.setText("Constituents to track:");

        constituentsTextField.setText("NP, VP");
        constituentsTextField.setToolTipText("the constituents to track stats for across parses");

        constituentsList.setModel(new javax.swing.AbstractListModel()
            {
                String[] strings = grammartools.GrammarTools.PennTreebankAllTags;
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            constituentsList.setToolTipText("");
            jScrollPane1.setViewportView(constituentsList);

            addConstituentButton.setText("Add");
            addConstituentButton.setToolTipText("Adds a constituent from the list to the tracked constituents");
            addConstituentButton.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    addConstituentButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(constituentsTextField)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addConstituentButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(constituentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addConstituentButton)
                            .addGap(0, 70, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap())
            );
        }// </editor-fold>//GEN-END:initComponents

    private void addConstituentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addConstituentButtonActionPerformed
    {//GEN-HEADEREND:event_addConstituentButtonActionPerformed
        for(Object o : constituentsList.getSelectedValues())
        {
            String text = constituentsTextField.getText().trim();
            if(!Arrays.asList(parseConstituentsList(text)).contains((String)o))
            {
                constituentsTextField.setText(text + (text.isEmpty() || text.endsWith(",") ? "" : ", ") + o);
            }
        }
    }//GEN-LAST:event_addConstituentButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConstituentButton;
    private javax.swing.JList constituentsList;
    private javax.swing.JTextField constituentsTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

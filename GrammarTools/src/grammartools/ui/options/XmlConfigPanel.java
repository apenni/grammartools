package grammartools.ui.options;

import grammartools.GrammarTools.XmlOptions;
import grammartools.ui.SwingUtils;
import java.io.File;
import javax.swing.JFileChooser;

@SuppressWarnings("serial")
public class XmlConfigPanel extends javax.swing.JPanel implements ConfigPanel
{
    public XmlConfigPanel()
    {
        initComponents();
        
        updateGrammaticalClassTypeLayout();
    }
    
    @Override
    public XmlOptions getConfig()
    {
        XmlOptions o = new XmlOptions();
        o.outputFile = outputFileTextField.getText();
        o.isAppending = appendFileCheckBox.isSelected();
        
        o.useBinaryErrorOnly = binaryGrammaticalRadioButton.isSelected();
        o.nGrammaticalErrorsPerSentence = 
                o.useBinaryErrorOnly ?
                (correctRadioButton.isSelected() ? 0 : 1) : 
                (Integer)nGrammaticalErrorsPerSentenceSpinner.getValue();
        
        return o;
    }
    
    @Override
    public String getConfigErrors()
    {
        String errors = "";

        XmlOptions o = getConfig();
        if(o.outputFile.isEmpty()) errors += "output file must be specified";
        
        return errors.isEmpty() ? null : errors;
    }
    
    private void updateGrammaticalClassTypeLayout()
    {
        grammaticalClassTypePanel.removeAll();
        grammaticalClassTypePanel.add(
            binaryGrammaticalRadioButton.isSelected() ? 
                binaryPanel : numericPanel);
        grammaticalClassTypePanel.revalidate();
    }
    
    private void updateGrammaticalityLabel()
    {
        grammaticalityImageLabel.setIcon(
                correctRadioButton.isSelected() 
                ? correctIcon : incorrectIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        binaryGrammaticalButtonGroup = new javax.swing.ButtonGroup();
        grammaticalClassTypeButtonGroup = new javax.swing.ButtonGroup();
        binaryPanel = new javax.swing.JPanel();
        grammaticalityImageLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        correctRadioButton = new javax.swing.JRadioButton();
        incorrectRadioButton = new javax.swing.JRadioButton();
        numericPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nGrammaticalErrorsPerSentenceSpinner = new javax.swing.JSpinner();
        browseForOutput = new javax.swing.JButton();
        outputFileTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        appendFileCheckBox = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        binaryGrammaticalRadioButton = new javax.swing.JRadioButton();
        numericGrammaticalRadioButton = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        grammaticalClassTypePanel = new javax.swing.JPanel();

        grammaticalityImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grammaticalityImageLabel.setIcon(correctIcon);
        grammaticalityImageLabel.setAlignmentX(0.5F);
        grammaticalityImageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setLabelFor(correctRadioButton);
        jLabel3.setText("Input is grammatically...");

        binaryGrammaticalButtonGroup.add(correctRadioButton);
        correctRadioButton.setMnemonic('c');
        correctRadioButton.setSelected(true);
        correctRadioButton.setText("Correct");
        correctRadioButton.setToolTipText("The input sentences are grammatically correct");
        correctRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                correctRadioButtonActionPerformed(evt);
            }
        });

        binaryGrammaticalButtonGroup.add(incorrectRadioButton);
        incorrectRadioButton.setMnemonic('i');
        incorrectRadioButton.setText("Incorrect");
        incorrectRadioButton.setToolTipText("The input sentences are grammatically incorrect");
        incorrectRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                incorrectRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout binaryPanelLayout = new javax.swing.GroupLayout(binaryPanel);
        binaryPanel.setLayout(binaryPanelLayout);
        binaryPanelLayout.setHorizontalGroup(
            binaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(binaryPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(binaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(binaryPanelLayout.createSequentialGroup()
                        .addGroup(binaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correctRadioButton)
                            .addComponent(incorrectRadioButton))
                        .addGap(18, 18, 18)
                        .addComponent(grammaticalityImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        binaryPanelLayout.setVerticalGroup(
            binaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(binaryPanelLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(binaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(binaryPanelLayout.createSequentialGroup()
                        .addComponent(correctRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(incorrectRadioButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, binaryPanelLayout.createSequentialGroup()
                        .addComponent(grammaticalityImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        numericPanel.setName("numericPanel"); // NOI18N

        jLabel5.setText("Number of errors per sentence:");

        nGrammaticalErrorsPerSentenceSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        nGrammaticalErrorsPerSentenceSpinner.setToolTipText("Enter number of errors present in each sentence.");

        javax.swing.GroupLayout numericPanelLayout = new javax.swing.GroupLayout(numericPanel);
        numericPanel.setLayout(numericPanelLayout);
        numericPanelLayout.setHorizontalGroup(
            numericPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numericPanelLayout.createSequentialGroup()
                .addGroup(numericPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(nGrammaticalErrorsPerSentenceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        numericPanelLayout.setVerticalGroup(
            numericPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numericPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nGrammaticalErrorsPerSentenceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        browseForOutput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/16/document-open.png"))); // NOI18N
        browseForOutput.setToolTipText("Browse");
        browseForOutput.setMargin(new java.awt.Insets(0, 0, 0, 0));
        browseForOutput.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                browseForOutputActionPerformed(evt);
            }
        });

        outputFileTextField.setFont(outputFileTextField.getFont());
        outputFileTextField.setText(DEF_OUTPUT_XML_FILE);
        outputFileTextField.setToolTipText("The location of the XML output file.");

        jLabel4.setDisplayedMnemonic('o');
        jLabel4.setLabelFor(outputFileTextField);
        jLabel4.setText("Output file:");

        appendFileCheckBox.setMnemonic('a');
        appendFileCheckBox.setText("Append to file");
        appendFileCheckBox.setToolTipText("Append data to a pre-existing file?");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        grammaticalClassTypeButtonGroup.add(binaryGrammaticalRadioButton);
        binaryGrammaticalRadioButton.setMnemonic('b');
        binaryGrammaticalRadioButton.setSelected(true);
        binaryGrammaticalRadioButton.setText("Binary");
        binaryGrammaticalRadioButton.setToolTipText("Use binary nominal classes: grammatically correct or incorrect");
        binaryGrammaticalRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                binaryGrammaticalRadioButtonActionPerformed(evt);
            }
        });

        grammaticalClassTypeButtonGroup.add(numericGrammaticalRadioButton);
        numericGrammaticalRadioButton.setMnemonic('n');
        numericGrammaticalRadioButton.setText("Numeric ");
        numericGrammaticalRadioButton.setToolTipText("Use numeric class: number of grammatical errors present");
        numericGrammaticalRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                numericGrammaticalRadioButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Grammatical class type:");

        grammaticalClassTypePanel.setLayout(new javax.swing.BoxLayout(grammaticalClassTypePanel, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(binaryGrammaticalRadioButton)
                    .addComponent(numericGrammaticalRadioButton)
                    .addComponent(jLabel6)
                    .addComponent(grammaticalClassTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(browseForOutput)
                        .addGap(0, 0, 0)
                        .addComponent(outputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jLabel4)
                    .addComponent(appendFileCheckBox))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(binaryGrammaticalRadioButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(numericGrammaticalRadioButton)))
                        .addGap(11, 11, 11)
                        .addComponent(grammaticalClassTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(browseForOutput, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(outputFileTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appendFileCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseForOutputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_browseForOutputActionPerformed
    {//GEN-HEADEREND:event_browseForOutputActionPerformed
        javax.swing.filechooser.FileNameExtensionFilter filter = 
            new javax.swing.filechooser.FileNameExtensionFilter("XML Files [.xml]", "xml");
        
        String output = outputFileTextField.getText();
        String file = SwingUtils.browseForFile(
            (java.awt.Window)this.getTopLevelAncestor(),
            (output.isEmpty() ? DEF_OUTPUT_XML_FILE : output), JFileChooser.FILES_ONLY,
            "Select an output file",
            filter);

        if(file != null && !new File(file).equals(new File(outputFileTextField.getText())))
        {
            outputFileTextField.setText(file);
            outputFileTextField.updateUI();
        }
    }//GEN-LAST:event_browseForOutputActionPerformed

    private void incorrectRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_incorrectRadioButtonActionPerformed
    {//GEN-HEADEREND:event_incorrectRadioButtonActionPerformed
        updateGrammaticalityLabel();
    }//GEN-LAST:event_incorrectRadioButtonActionPerformed

    private void correctRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_correctRadioButtonActionPerformed
    {//GEN-HEADEREND:event_correctRadioButtonActionPerformed
        updateGrammaticalityLabel();
    }//GEN-LAST:event_correctRadioButtonActionPerformed

    private void binaryGrammaticalRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_binaryGrammaticalRadioButtonActionPerformed
    {//GEN-HEADEREND:event_binaryGrammaticalRadioButtonActionPerformed
        updateGrammaticalClassTypeLayout();
    }//GEN-LAST:event_binaryGrammaticalRadioButtonActionPerformed

    private void numericGrammaticalRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_numericGrammaticalRadioButtonActionPerformed
    {//GEN-HEADEREND:event_numericGrammaticalRadioButtonActionPerformed
        updateGrammaticalClassTypeLayout();
    }//GEN-LAST:event_numericGrammaticalRadioButtonActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox appendFileCheckBox;
    private javax.swing.ButtonGroup binaryGrammaticalButtonGroup;
    private javax.swing.JRadioButton binaryGrammaticalRadioButton;
    private javax.swing.JPanel binaryPanel;
    private javax.swing.JButton browseForOutput;
    private javax.swing.JRadioButton correctRadioButton;
    private javax.swing.ButtonGroup grammaticalClassTypeButtonGroup;
    private javax.swing.JPanel grammaticalClassTypePanel;
    private javax.swing.JLabel grammaticalityImageLabel;
    private javax.swing.JRadioButton incorrectRadioButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner nGrammaticalErrorsPerSentenceSpinner;
    private javax.swing.JRadioButton numericGrammaticalRadioButton;
    private javax.swing.JPanel numericPanel;
    private javax.swing.JTextField outputFileTextField;
    // End of variables declaration//GEN-END:variables

    private final javax.swing.ImageIcon correctIcon = new javax.swing.ImageIcon(getClass().getResource("/img/correct.png"));
    private final javax.swing.ImageIcon incorrectIcon = new javax.swing.ImageIcon(getClass().getResource("/img/incorrect.png"));
    private static final String DEF_OUTPUT_XML_FILE = "sentences.xml";
}
